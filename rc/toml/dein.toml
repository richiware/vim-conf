# BufExplorer
[[plugins]]
repo = 'jlanzarotta/bufexplorer'
# Open BufferExplorer
hook_add = 'nmap <F9> :<C-u>ToggleBufExplorer<CR>'

[[plugins]]
repo = 'Shougo/dein.vim'

# TODO(Ricardo)
[[plugins]]
repo = 'vim-scripts/DirDiff.vim'
hook_source = '''
    let g:DirDiffTextFiles = "Los ficheros "
    let g:DirDiffTextAnd = " y "
    let g:DirDiffTextDiffer = " son distintos"
    let g:DirDiffTextOnlyIn = "Sólo en"
'''

# Plugin que añade autocompletado para Java.
# TODO(Ricardo)
[[plugins]]
repo = 'ervandew/eclim'
# Coexistencia entre YouCompleteMe y Eclim
hook_source = "let g:EclimCompletionMethod = 'omnifunc'"

# Support for Evernote
# TODO(Ricardo)
[[plugins]]
repo = 'kakkyz81/evervim'
# Evernote developer key
hook_source = "let g:evervim_devtoken='S=s44:U=495a1f:E=16050da403b:C=158f9291140:P=1cd:A=en-devtoken:V=2:H=13e0fa2775b4a545051d81d06ed9c3ed'"

[[plugins]]
repo = 'cpiger/NeoDebug'

# UltiSnips - Fancy snippet functionality
[[plugins]]
repo = 'SirVer/ultisnips'
hook_source = '''
    let g:UltiSnipsSnippetDirectories=['UltiSnips', getcwd().'/.vim/UltiSnips']
    let g:UltiSnipsEditSplit='vertical'

    " Don't map tabs because used by deoplete.
    let g:UltiSnipsExpandTrigger="<tab>"
    let g:UltiSnipsJumpForwardTrigger="<tab>"
    let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

    nnoremap <leader>ue :UltiSnipsEdit<cr>
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'altercation/vim-colors-solarized'
hook_post_source = '''
    " let g:solarized_termcolors=256
    syntax enable
    if has('gui_running')
        set background=light
    else
        set background=dark
    endif
    colorscheme solarized
'''

# Instala una barra inferior con más información (ex: información git)
[[plugins]]
repo = 'bling/vim-airline'
depends = ['firenvim', 'vim-obsession']
hook_source = '''
    set guifont=DejaVu\ Sans\ Mono\ for\ Powerline:h8
    let g:airline_powerline_fonts = 1
    if !exists('g:started_by_firenvim')
        let g:airline#extensions#branch#enabled = 1
        let g:airline#extensions#eclim#enabled = 1
        let g:airline#extensions#tabline#enabled = 1
        let g:airline#extensions#coc#enabled = 1 " Integration with CoC
        let g:airline#extensions#ale#enabled = 1 " Integration with Ale
    endif
'''

# Plugin to review PR in Github.
[[plugins]]
repo = 'junkblocker/patchreview-vim'
[[plugins]]
repo = 'codegram/vim-codereview'

# Plugin para gestionar repositorio Git.
[[plugins]]
repo = 'tpope/vim-fugitive'
# Extension of fugitive
[[plugins]]
repo = 'idanarye/vim-merginal'

# Grammatically correction
[[plugins]]
repo = 'rhysd/vim-grammarous'
hook_source = '''
    nmap <Leader>G <Plug>(grammarous-open-info-window)
'''

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
build = 'sh -c "cd app && yarn install"'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
hook_source = '''
    let g:mkdp_port = '8090'
    let g:mkdp_preview_options = {
        \ 'uml': { 'server': 'http://localhost:8080' }
        \}
'''

[[plugins]]
repo = 'mattn/webapi-vim'
[[plugins]]
repo = 'kana/vim-metarw'
depends = 'webapi-vim'

[[plugins]]
repo = 'kana/vim-metarw-git'
depends = 'vim-metarw'

[[plugins]]
repo = 'zebult/vim-metarw-redmine'
depends = 'vim-metarw'
hook_source = '''
    let g:metarw_redmine_server = 'http://eprosima.easyredmine.com'
    let g:metarw_redmine_apikey = '54c4752502ac196192a1ea76382e178c9b2c7c17'
    let g:metarw_redmine_projectkey = '3'
    let g:metarw_redmine_queryid = '5'
'''

# Automatic save of sessions.
[[plugins]]
repo = 'tpope/vim-obsession'

[[plugins]]
repo = 'honza/vim-snippets'

# Support for taskwarrior
[[plugins]]
repo = 'blindFS/vim-taskwarrior'
hook_add = '''
    nnoremap <silent> <Leader>T
        \ <Plug>(taskwarrior_quickref)
'''

# Tmux syntax
[[plugins]]
repo = 'tmux-plugins/vim-tmux'

# Support for vim-tmux-navigator
[[plugins]]
repo = 'christoomey/vim-tmux-navigator'

# Better support for latex
[[plugins]]
repo = 'lervag/vimtex'
hook_source = '''
    let g:tex_flavor = 'latex'
    let g:vimtex_view_method = 'zathura'
    let g:vimtex_tex_program = 'xelatex'
    let g:vimtex_latexmk_build_dir = './build/pdf'
    let g:vimtex_compiler_progname = 'nvr'

    " '-cd' Permit to have same Tex file names in a repository. This build inside the folder of the Tex file.
    let g:vimtex_compiler_latexmk = {
        \ 'build_dir' : 'build/pdf',
        \ 'options' : [
        \   '-cd',
        \   '-pdf',
        \   "-e '$pdflatex=q/xelatex %O %S/'",
        \   '-verbose',
        \   '-file-line-error',
        \   '-synctex=1',
        \   '-interaction=nonstopmode',
        \ ],
        \}
'''

[[plugins]]
repo = 'VincentCordobes/vim-translate'
hook_source = '''
    let g:translate#default_languages = {
        \ 'es': 'en',
        \ 'en': 'es'
        \ }
    nnoremap <silent> <leader>T :Translate<CR>
    vnoremap <silent> <leader>T :TranslateVisual<CR>
'''

# Plugin para generar ficheros YouCompleteMe o Color_Coded.
[[plugins]]
repo = 'rdnetto/YCM-Generator'

# Add support for debugging on GDB
[[plugins]]
repo = 'sakhnik/nvim-gdb'
build = 'bash install.sh'

# Check your grammar
[[plugins]]
repo = 'reedes/vim-wordy'
